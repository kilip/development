security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_ADMIN_PAROKI:    ROLE_USER
        ROLE_ADMIN:       ROLE_ADMIN_PAROKI
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        in_memory: { memory: ~ }
        fos_userbundle:
            id: fos_user.user_provider.username_email
    firewalls:
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            provider: fos_userbundle
            json_login:
                check_path: /login_check
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:      ^/api
            provider:     fos_userbundle
            stateless:    true
            anonymous:    ~
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator


    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY}
